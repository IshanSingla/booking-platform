generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mongodb"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// User table
model User {
  id          String    @id @default(uuid()) @map("_id") @db.ObjectId
  name        String?
  phoneNumber String    @unique(map: "phoneNumber_1")
  role        String?
  loginIp     String
  loginDevice String
  createdAt   DateTime? @default(now()) @db.Date
  updatedAt   DateTime? @updatedAt @db.Date
  requests    Request[] 
}

// Otp table for phone number OTPs
model PhoneOtp {
  id          String    @id @default(uuid()) @map("_id")
  phoneNumber String
  otp         String
  expTime     DateTime  @db.Date
  createdAt   DateTime? @default(now()) @db.Date
  updatedAt   DateTime? @updatedAt @db.Date
}

// Category table
model Category {
  id          String    @id @default(uuid()) @map("_id") @db.ObjectId
  name        String
  description String
  image       String?
  createdAt   DateTime? @default(now()) @db.Date
  updatedAt   DateTime? @updatedAt @db.Date
}

// Organization table
model Organization {
  id          String    @id @default(uuid()) @map("_id") @db.ObjectId
  name        String
  displayName String?
  address     String?
  pincode     String?
  description String?
  logo        String?
  isVerified  Boolean   @default(false)
  phoneNumber String?
  email       String?
  website     String?
  createdAt   DateTime? @default(now()) @db.Date
  updatedAt   DateTime? @updatedAt @db.Date
  requests    Request[] 
}

// Requests table
model Request {
  id             String       @id @default(uuid()) @map("_id") @db.ObjectId
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  status         String?
}